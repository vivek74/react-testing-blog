{"version":3,"sources":["components/Homepage/Homepage.module.scss","utils/setAuthToken.js","store/actions/authTypes.js","store/reducers/auth.js","store/reducers/errorReducer.js","store/reducers/register.js","store/reducers/componentLoading.js","store/reducers/fetchBlogs.js","store/reducers/fetchOneBlog.js","store/index.js","store/reducers/index.js","components/Homepage/CardPost.js","components/Homepage/Homepage.js","components/Navbar/Navbar.js","containers/LandingPage/LandingPage.js","containers/Register/Register.js","components/Homepage/Card.js","containers/Blog/Blog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","avatar","noSpace","bold","fadeColor","noSpaceBold","nextBtn","deleteBtn","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","authData","state","arguments","length","undefined","action","Object","objectSpread","errorData","error","data","errMsg","successMsg","registerData","newState","JSON","parse","stringify","status","componentLoading","addLoading","allBlogData","oneBlogData","history","createBrowserHistory","enhancers","middleware","promiseMiddleware","thunk","routerMiddleware","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","push","composedEnhancers","apply","applyMiddleware","concat","store","createStore","combineReducers","allBlogs","router","connectRouter","useStyles","makeStyles","theme","card","maxWidth","media","height","paddingTop","margin","color","backgroundColor","green","CardPost","props","classes","react_default","a","createElement","Card","className","CardHeader","Avatar","aria-label","Assignment_default","IconButton","MoreVert_default","title","subheader","date","CardMedia","image","imageUrl","CardContent","Typography","variant","component","blogContent","children","Homepage","useDispatch","Moment","globalFormat","antIcon","icon","style","fontSize","spin","allBlogsPost","useSelector","loadingBlog","useEffect","get","deteteBlogPost","id","delete","map","col","marginBottom","key","_id","xs","sm","md","lg","xl","Zoom_default","CardPost_CardPost","dist_default","react_word_limit_default","limit","styles","onClick","display","react_router_dom","to","position","top","indicator","spinning","row","justify","TextArea","root","flexGrow","menuButton","marginRight","spacing","list","width","fullList","LandingNavbar","withRouter","es_form","create","name","_ref","form","getFieldDecorator","_useState","useState","visible","_useState2","slicedToArray","setState","_useState3","_useState4","loginPageLoading","setLoginPageLoading","_useState5","_useState6","modal","setModal","_useState7","errors","_useState8","setErrorData","loginLoading","resetFields","navItems","Button","AppBar","Toolbar","es_modal","onCancel","footer","onSubmit","e","preventDefault","validateFields","err","values","post","span","Item","label","rules","required","message","input","placeholder","rows","es_button","block","htmlType","drawer","zIndex","onClose","closable","textAlign","textTransform","passwordincorrect","emailnotfound","startloding","Promise","resolve","userData","then","res","setItem","jwt_decode","catch","response","prefix","padding","LandingPage","Fragment","Container","Homepage_Homepage","Register","confirmDirty","signupLoading","signupErrorData","email","signupUserData","errormsg","successmsg","success","fontWeight","hasFeedback","validator","rule","value","callback","force","min","Password","getFieldValue","onBlur","target","CardDetail","CardActionArea","gutterBottom","CardActions","fab","extendedIcon","Blog","match","blogId","params","dateOrignal","paddingBottom","Card_CardDetail","Fab","put","initialValue","Blog_TextArea","jwtToken","currentTime","Date","now","exp","location","href","react_router","exact","path","Boolean","hostname","ReactDOM","render","es","esm","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa1be340.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Homepage_avatar__8u6Cv\",\"noSpace\":\"Homepage_noSpace__15HlR\",\"bold\":\"Homepage_bold__26atZ\",\"fadeColor\":\"Homepage_fadeColor__2UJ2Y\",\"noSpaceBold\":\"Homepage_noSpaceBold__1i5Qd\",\"nextBtn\":\"Homepage_nextBtn__3y-98\",\"deleteBtn\":\"Homepage_deleteBtn__3Nsyo\"};","import axios from \"axios\";\n\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n","import axios from \"axios\";\nimport {setAuthToken} from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\n//setting user\nexport const SETTING_USER = 'SETTING_USER';\nexport const SETTING_USER_PENDING = 'SETTING_USER_PENDING';\nexport const SETTING_USER_FULFILLED = 'SETTING_USER_FULFILLED';\n\n//set current user\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const SET_CURRENT_PENDING = 'SET_CURRENT_PENDING';\nexport const SET_CURRENT_FULFILLED = 'SET_CURRENT_FULFILLED';\n\n//error handling\nexport const GET_ERROR = 'GET_ERROR';\nexport const GET_ERROR_PENDING = 'GET_ERROR_PENDING';\nexport const GET_ERROR_FULFILLED = 'GET_ERROR_FULFILLED';\nexport const GET_ERROR_REJECTED = 'GET_ERROR_REJECTED';\n\n//register user\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_PENDING = 'REGISTER_USER_PENDING';\nexport const REGISTER_USER_FULFILLED = 'REGISTER_USER_FULFILLED';\n\n//message state\nexport const MSG_STATE_ERROR = 'MSG_STATE_ERROR';\nexport const MSG_STATE_SUCCESS = 'MSG_STATE_SUCCESS';\n\n//component Loading\nexport const COMP_LOADING_PENDING = 'COMP_LOADING_PENDING';\nexport const COMP_LOADING_FULFILLED = 'COMP_LOADING_FULFILLED';\n\n//fetching blogs\nexport const GET_BLOGS = 'GET_BLOGS';\nexport const GET_BLOGS_PENDING = 'GET_BLOGS_PENDING';\nexport const GET_BLOGS_FULFILLED = 'GET_BLOGS_FULFILLED';\n\n//add blogs\nexport const ADD_BLOGS = 'ADD_BLOGS';\nexport const ADD_BLOGS_PENDING = 'ADD_BLOGS_PENDING';\nexport const ADD_BLOGS_FULFILLED = 'ADD_BLOGS_FULFILLED';\n\n//delete blog\nexport const DELETE_BLOG = 'DELETE_BLOG';\nexport const DELETE_BLOG_PENDING = 'DELETE_BLOG_PENDING';\nexport const DELETE_BLOG_FULFILLED = 'DELETE_BLOG_FULFILLED';\n\n//fetch one blog\nexport const FETCH_ONE_BLOG = 'FETCH_ONE_BLOG';\nexport const FETCH_ONE_BLOG_PENDING = 'FETCH_ONE_BLOG_PENDING';\nexport const FETCH_ONE_BLOG_FULFILLED = 'FETCH_ONE_BLOG_FULFILLED';\n\n//edit Blogs\nexport const EDIT_BLOG = 'EDIT_BLOG';\nexport const EDIT_BLOG_PENDING = 'EDIT_BLOG_PENDING';\nexport const EDIT_BLOG_FULFILLED = 'EDIT_BLOG_FULFILLED';\n\n//get error\nexport const GET_ERRORS = 'GET_ERRORS';\n\n//loging\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\n\n// Register User\nexport const registerUser = (data) => {\n    return {\n      type: REGISTER_USER,\n      payload: axios.post('http://localhost:5000/api/users/register',data)\n    }\n};\n\n// fetching blogs\nexport const fetchBlogs = () => {\n  return {\n    type:GET_BLOGS,\n    payload: axios.get('http://localhost:5000/api/blog/blogs')\n  }\n}\n\n// adding blogs\nexport const addBlogs = (data) => {\n  return {\n    type:ADD_BLOGS,\n    payload: axios.post('http://localhost:5000/api/blog/newBlog',data)\n  }\n}\n\n// delete blogs\nexport const deleteBlog = (id) => {\n  return {\n    type:DELETE_BLOG,\n    payload: axios.delete(`http://localhost:5000/api/blog/blogs/${id}`)\n  }\n}\n\nexport const fetchOneBlog = (id) => {\n  return {\n    type:FETCH_ONE_BLOG,\n    payload: axios.get(`http://localhost:5000/api/blog/${id}`)\n  }\n}\n\nexport const editBlog = (data, id) => {\n  return {\n    type:EDIT_BLOG,\n    payload: axios.put(`http://localhost:5000/api/blog/blogs/${id}`,data)\n  }\n}\n\n//login route\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"http://localhost:5000/api/users/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","import * as actions from '../actions/authTypes';\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport const authData = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case actions.START_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case actions.STOP_LOADING:\n        return {\n            ...state,\n            loading: false\n        };\n        default:\n        return state;\n    }\n};","import * as actions from '../actions/authTypes';\n\nconst initialState = {};\n\nexport const errorData =  function(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import * as actions from '../actions/authTypes';\n\nconst initialState = {\n    error: {},\n    data : {},\n    loading: false,\n    errMsg: false,\n    successMsg: false\n};\n\nexport const registerData = (state = initialState, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    switch (action.type) {\n        case actions.REGISTER_USER_FULFILLED: {\n            let status = action.payload.status;\n            if(status === 200){\n                newState = {\n                    ...state,\n                    error: action.payload.data,\n                    loading:false,\n                    errMsg:true\n                }\n            } else if(status === 201) {\n                newState = {\n                    ...state,\n                    data: action.payload.data,\n                    loading: false,\n                    successMsg: true \n                }\n            }\n            return newState;\n        }\n        case actions.REGISTER_USER_PENDING: {\n            newState = {\n                ...state,\n                loading: true\n            }\n            return newState;\n        }\n        case actions.MSG_STATE_ERROR: {\n            newState = {\n                ...state,\n                errMsg: false\n            }\n            return newState;\n        }\n        case actions.MSG_STATE_SUCCESS: {\n            newState = {\n                ...state,\n                successMsg: false\n            }\n            return newState;\n        }\n      default:\n        return newState;\n    }\n};","import * as actions from '../actions/authTypes';\n\nconst initialState = {\n    loading: false\n};\n\nexport const componentLoading = (state = initialState, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    switch (action.type) {\n        case actions.COMP_LOADING_FULFILLED: {\n            newState = {\n                ...state,\n                loading: false\n            }\n            return newState;\n        }\n        case actions.COMP_LOADING_PENDING: {\n            newState = {\n                ...state,\n                loading: true\n            }\n            return newState;\n        }\n      default:\n        return newState;\n    }\n};","import * as actions from '../actions/authTypes';\n\nconst initialState = {\n    data : [],\n    loading: true,\n    addLoading: false\n};\n\nexport const allBlogData = (state = initialState, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    switch (action.type) {\n        case actions.GET_BLOGS_FULFILLED: {\n            newState = {\n                ...state,\n                data: action.payload.data,\n                loading:false\n            }\n            return newState;\n        }\n        case actions.GET_BLOGS_PENDING: {\n            newState = {\n                ...state,\n                loading: true\n            }\n            return newState;\n        }\n        case actions.ADD_BLOGS_FULFILLED: {\n            newState = {\n                ...state,\n                data: action.payload.data,\n                addLoading:false,\n                loading: false\n            }\n            return newState;\n        }\n        case actions.ADD_BLOGS_PENDING: {\n            newState = {\n                ...state,\n                addLoading: true,\n                loading: true\n            }\n            return newState;\n        }\n        case actions.DELETE_BLOG_FULFILLED: {\n            newState = {\n                ...state,\n                data: action.payload.data,\n                loading: false\n            }\n            return newState;\n        }\n        case actions.DELETE_BLOG_PENDING: {\n            newState = {\n                ...state,\n                loading: true\n            }\n            return newState;\n        }\n      default:\n        return newState;\n    }\n};","import * as actions from '../actions/authTypes';\n\nconst initialState = {\n    data : [],\n    loading: true,\n};\n\nexport const oneBlogData = (state = initialState, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    switch (action.type) {\n        case actions.FETCH_ONE_BLOG_FULFILLED: {\n            newState = {\n                ...state,\n                data: action.payload.data,\n                loading:false\n            }\n            return newState;\n        }\n        case actions.FETCH_ONE_BLOG_PENDING: {\n            newState = {\n                ...state,\n                loading: true\n            }\n            return newState;\n        }\n        case actions.EDIT_BLOG_FULFILLED: {\n            newState = {\n                ...state,\n                data: action.payload.data,\n                loading:false\n            }\n            return newState;\n        }\n        case actions.EDIT_BLOG_PENDING: {\n            newState = {\n                ...state,\n                loading: true\n            }\n            return newState;\n        }\n      default:\n        return newState;\n    }\n};","import thunk from 'redux-thunk';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { createBrowserHistory } from 'history';\nimport createRootReducer from './reducers';\n\nexport const history = createBrowserHistory();\n\nconst enhancers = [];\nconst middleware = [promiseMiddleware, thunk, routerMiddleware(history)];\n\nconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nenhancers.push(devToolsExtension());\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n);\n\nconst store = createStore(createRootReducer(history), composedEnhancers);\n\nexport default store;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { authData } from './auth';\nimport { errorData } from './errorReducer';\nimport { registerData } from './register';\nimport { componentLoading } from './componentLoading';\nimport { allBlogData } from './fetchBlogs';\nimport {oneBlogData} from './fetchOneBlog'\n\n//combine reducers\nexport default (history) => combineReducers({\n    authData: authData,\n    error: errorData,\n    registerData: registerData,\n    componentLoading: componentLoading,\n    allBlogs: allBlogData,\n    oneBlogData:oneBlogData,\n    router: connectRouter(history),\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { green } from '@material-ui/core/colors';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', \n  },\n  avatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: green[500],\n  },\n}));\n\nexport const CardPost = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n            <AssignmentIcon />\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"Settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.title}\n        subheader={props.date}\n      />\n      <CardMedia\n        className={classes.media}\n        image={props.imageUrl}\n        title={props.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.blogContent}\n        </Typography>\n      </CardContent>\n      <CardContent>\n            {props.children}\n      </CardContent>\n    </Card>\n  );\n}\n","import React, {useEffect} from 'react';\nimport {fetchBlogs, deleteBlog} from '../../store/actions/authTypes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport WordLimit from 'react-word-limit';\nimport { NavLink } from 'react-router-dom';\nimport { Spin, Icon,Row,Col} from 'antd';\nimport Moment from 'react-moment';\nimport {CardPost} from './CardPost';\nimport Zoom from 'react-reveal/Zoom';\nimport styles from './Homepage.module.scss';\n\nexport const Homepage = () => {\n    const dispatch = useDispatch()\n    Moment.globalFormat = 'D MMM YYYY';\n    const antIcon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\n\n    const allBlogsPost = useSelector(state => state.allBlogs.data);\n    const loadingBlog = useSelector(state => state.allBlogs.loading);\n    const isAuthenticated = useSelector(state => state.authData.isAuthenticated);\n\n    useEffect(()=>{\n        dispatch(fetchBlogs())\n    },[isAuthenticated])\n\n    const deteteBlogPost = (data) => {\n        dispatch(deleteBlog(data))\n    }\n\n    const allBlogs = (\n        allBlogsPost.map(data =>(\n\n            <Col style={{marginBottom:'30px'}} key={data._id} xs={24} sm={12} md={12} lg={8} xl={8}>\n                <Zoom>\n                <CardPost imageUrl={data.imageUrl} title={data.title} date={<Moment>{data.date}</Moment>} blogContent={<WordLimit limit={200}>{data.blogContent}</WordLimit>}>\n                    {isAuthenticated ? (\n                        <Icon className={styles.deleteBtn} type=\"delete\" onClick={()=>deteteBlogPost(data._id)} />\n                    ):(\n                        <p style={{display:'inline', color:'red', fontSize:'10px'}}>LOGIN TO DELETE</p>\n                    )}\n                    <NavLink to={data._id}><p className={styles.nextBtn}>Show more <Icon type=\"double-right\" /></p></NavLink>\n                </CardPost>\n                </Zoom>\n            </Col>\n        ))\n    );\n\n    return(\n        <div>\n            <Spin style={{position:'fixed',top:'20%'}} indicator={antIcon} spinning={loadingBlog}>\n                <Row type=\"flex\" justify=\"space-between\">\n                    {allBlogs}\n                </Row>\n            </Spin>\n        </div>\n    );\n}\n","import React, {useState,useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MaterialButton from '@material-ui/core/Button';\nimport {addBlogs,loginUser, logoutUser} from '../../store/actions/authTypes';\nimport { Form, Icon, Input, Drawer, Button,Modal,Row,Col,Spin } from 'antd';\nimport { withRouter } from 'react-router';\nconst { TextArea } = Input;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst LandingNavbarWithForm = ({form})=> {\n\n  const { getFieldDecorator } = form;\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 40 }} spin />;\n  const classes = useStyles();\n  const dispatch = useDispatch()\n\n  const [state, setState] = useState({\n    visible: false\n  });\n  \n  const [loginPageLoading, setLoginPageLoading] = useState(false);\n\n  const [ modal, setModal ] = useState(false);\n  const [ errorData, setErrorData ] = useState({\n    errors: {}\n  })\n  const addLoading = useSelector(state => state.allBlogs.addLoading);\n  const loginLoading = useSelector(state => state.authData.loading);\n  const isAuthenticated = useSelector(state => state.authData.isAuthenticated);\n  const error = useSelector(state => state.error);\n\n  useEffect(()=>{\n    if(isAuthenticated){\n      setState({\n        ...state,\n        visible: false,\n      });\n      setErrorData({\n        ...errorData,\n        errors: {}\n      })\n      setLoginPageLoading(false);\n      form.resetFields()\n    }\n    if(error){\n      setErrorData({\n        ...errorData,\n        errors: error\n      })\n      form.resetFields()\n    }\n  },[isAuthenticated, error])\n\n  const showDrawer = () => {\n    setState({\n      ...state,\n      visible: true,\n    });\n  };\n\n  const onClose = () => {\n    setState({\n      ...state,\n      visible: false,\n    });\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFields(['email', 'password'],(err, values) => {\n      if (!err) {\n        let startlo = () => {\n          return new Promise(resolve => {\n            resolve(dispatch({type:'START_LOADING'}))\n          })\n        }\n        let startloding = () => {\n          return new Promise(resolve => {\n            resolve(dispatch(loginUser(values)))\n          })\n        }\n        let stoplo = () => {\n          return new Promise(resolve => {\n            resolve(dispatch({type:'STOP_LOADING'}))\n          })\n        }\n\n        startlo().then(()=>{\n          return startloding()\n        }).then(()=>{\n          return stoplo()\n        })\n\n      }\n    });\n  };\n\n  const handleAddBlog = e => {\n    e.preventDefault();\n    form.validateFields(['title', 'imageUrl', 'blogContent'],(err, values) => {\n      if (!err) {\n        dispatch(addBlogs(values))\n        form.resetFields()\n        setModal(false);\n      }\n    });\n  };\n\n  const handelLogout = () => {\n    dispatch({type:'START_LOADING'})\n    dispatch(logoutUser());\n    dispatch({type:'STOP_LOADING'})\n  }\n\n  const navItems =(\n    <div>\n      {isAuthenticated ? (\n      <div>\n        <MaterialButton onClick={()=>{setModal(true)}} color=\"inherit\">ADD BLOG</MaterialButton>\n        <MaterialButton onClick={()=>handelLogout()} color=\"inherit\">LOGOUT</MaterialButton> \n      </div>\n      ):(\n        <MaterialButton onClick={showDrawer} color=\"inherit\">LOGIN</MaterialButton>\n      )}\n    </div>\n  )\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{color:'white'}} className={classes.title}>\n            <NavLink style={{color:'white'}} to='/'>TECH BLOG</NavLink>\n          </Typography>\n          {navItems}\n        </Toolbar>\n      </AppBar>\n      {/* Adding Blog */}\n      <Modal title=\"Add New Blog\" visible={modal} onCancel={()=>{setModal(false)}} footer={null}>\n      \n        <Form onSubmit={handleAddBlog} className=\"login-form\">\n          <Row>\n            <Col span={24}>\n              <Form.Item label='Title'>\n                  {getFieldDecorator('title', {\n                      rules: [\n                          { required: true, message: 'Please enter a Title' },\n                      ],\n                  })(\n                      <Input placeholder=\"Title\" />\n                  )}\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <Form.Item label='Image url'>\n                  {getFieldDecorator('imageUrl', {\n                      rules: [\n                          { required: true, message: 'Please enter image url' },\n                      ],\n                  })(\n                      <Input placeholder=\"Image Url\" />\n                  )}\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <Form.Item label='Blog Content'>\n                  {getFieldDecorator('blogContent', {\n                      rules: [\n                          { required: true, message: 'Please enter blog' },\n                      ],\n                  })(\n                      <TextArea rows={4} placeholder=\"Blog content\" />\n                  )}\n              </Form.Item>\n            </Col>\n          </Row>\n          <Button type=\"primary\" loading={addLoading} block htmlType=\"submit\" className=\"login-form-button\">\n              Submit\n          </Button>\n        </Form>\n      </Modal>\n      {/* login drawer */}\n      <Drawer style={{zIndex: '1200'}} title=\"LOGIN\" width={'35%'} onClose={onClose} visible={state.visible} closable>\n      <Spin spinning={loginPageLoading} indicator={antIcon} >\n        <p style={{textAlign:'center', textTransform:'uppercase',color:'red'}}>{errorData.errors.passwordincorrect}</p>\n        <p style={{textAlign:'center', textTransform:'uppercase',color:'red'}}>{errorData.errors.emailnotfound}</p>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator('email', {\n              rules: [\n                { required: true, message: 'Please input your email!' },\n                {type: 'email', message: 'The input is not valid E-mail!'}\n              ],\n            })(\n              <Input\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder=\"Email\"\n              />,\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('password', {\n              rules: [{ required: true, message: 'Please input your Password!' }],\n            })(\n              <Input\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />,\n            )}\n          </Form.Item>\n          <Button type=\"primary\" onClick={()=>{setLoginPageLoading(true)}} loading={loginLoading} block htmlType=\"submit\" className=\"login-form-button\">\n              Log in\n          </Button>\n          <div style={{padding:'2px'}}>\n            Or <NavLink to='/register'>register now!</NavLink> \n          </div>\n        </Form>\n        </Spin>\n      </Drawer>\n    </div>\n  );\n}\n\nexport const LandingNavbar = withRouter(Form.create({name: 'login'})(LandingNavbarWithForm));","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\n// components\nimport { Homepage } from '../../components/Homepage/Homepage';\nimport { LandingNavbar } from '../../components/Navbar/Navbar';\nimport './LandingPage.module.scss';\n\nconst LandingPage = ({history}) => {\n    return (\n        <React.Fragment>\n           <LandingNavbar history={history} />\n            <Container>\n                <Homepage/>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default LandingPage;","import React, {useState, useEffect} from 'react';\nimport { Form, Icon, Input, Button, Card, Row, Col, message } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../../store/actions/authTypes';\nimport Container from '@material-ui/core/Container';\nimport { LandingNavbar } from '../../components/Navbar/Navbar';\n\n\nconst RegisterForm = ({form, history}) => {\n  const dispatch = useDispatch()\n    const { getFieldDecorator } = form;\n    const [state, setState] = useState({\n      confirmDirty: false\n    });\n\n    const signupLoading = useSelector(state => state.registerData.loading);\n    const signupErrorData = useSelector(state => state.registerData.error.email);\n    const signupUserData= useSelector(state => state.registerData.data.name);\n    const errMsg= useSelector(state => state.registerData.errMsg);\n    const successMsg= useSelector(state => state.registerData.successMsg);\n\n    useEffect(()=>{\n      if(errMsg){\n        errormsg()\n        dispatch({ type: 'MSG_STATE_ERROR' })\n      } else if(successMsg){\n        successmsg()\n        dispatch({ type: 'MSG_STATE_SUCCESS' })\n        form.resetFields()\n        history.push('/')\n      }\n    },[signupLoading === true])\n\n    const compareToFirstPassword = (rule, value, callback, props) => {\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    const validateToNextPassword = (rule, value, callback, props) => {\n      if (value && state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n\n    const handleConfirmBlur = e => {\n      const { value } = e.target;\n      setState({ ...state, confirmDirty: state.confirmDirty || !!value });\n    };\n\n    const errormsg = () => {\n      if(signupErrorData.length)\n      message.error(`${signupErrorData}`);\n    };\n\n    const successmsg = () => {\n\n      let showMsg = () => {\n        return new Promise(resolve => {\n          resolve(message.success(`Welcome ${signupUserData}, Please login to continue`,8))\n        })\n      }\n\n      let enableLoading = () => {\n        return new Promise(resolve => {\n          resolve(dispatch({type:'COMP_LOADING_PENDING'}))\n        })\n      }\n\n      let desableLoading = () => {\n        return new Promise(resolve => {\n          resolve(dispatch({type:'COMP_LOADING_FULFILLED'}))\n        })\n      }\n\n      showMsg().then(()=>{\n        return enableLoading()\n      }).then(()=>{\n        return desableLoading()\n      })\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      form.validateFields((err, values) => {\n        if (!err) {\n          dispatch(registerUser(values))       \n        }\n      });\n    };\n\n    return (\n      <React.Fragment>\n        <LandingNavbar />\n        <Container>\n          <Row type=\"flex\" justify=\"center\">\n            <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n              <Card>\n                <h2 style={{textAlign:\"center\", fontWeight:\"bold\"}}>Welcome to 3D world</h2>\n                <p>Please Register to continue</p>\n                <Form onSubmit={handleSubmit} className=\"login-form\">\n                    <Form.Item label=\"Name\" hasFeedback>\n                      {getFieldDecorator('name', {\n                        rules: [\n                          {required: true, message: 'Please input your name!' },\n                        ],\n                      })(\n                        <Input\n                          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                          placeholder=\"Name\"\n                        />,\n                      )}\n                    </Form.Item>\n                    <Form.Item label=\"Email\" hasFeedback>\n                      {getFieldDecorator('email', {\n                        rules: [\n                          {required: true, message: 'Please input your email!' },\n                          {type: 'email', message: 'The input is not valid E-mail!'}\n                        ],\n                      })(\n                        <Input\n                          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                          placeholder=\"Email\"\n                        />,\n                      )}\n                    </Form.Item>\n                    <Form.Item label=\"Password\" hasFeedback>\n                      {getFieldDecorator('password', {\n                        rules: [\n                          {\n                            required: true,\n                            message: 'Please input your password!',\n                          },\n                          {\n                            validator: validateToNextPassword,\n                          },\n                          {\n                            min:6,\n                            message: 'Password must be of 6 letters',\n                          },\n                        ],\n                      })(<Input.Password\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Password\" \n                      />)}\n                    </Form.Item>\n                    <Form.Item label=\"Confirm Password\" hasFeedback>\n                      {getFieldDecorator('password2', {\n                        rules: [\n                          {\n                            required: true,\n                            message: 'Please confirm your password!',\n                          },\n                          {\n                            validator: compareToFirstPassword,\n                          },\n                          {\n                            min:6,\n                            message: 'Password must be of 6 letters',\n                          },\n                        ],\n                      })(<Input.Password onBlur={handleConfirmBlur} \n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Confirm password\"/>)}\n                    </Form.Item>\n                    <Button type=\"primary\" block loading={signupLoading} htmlType=\"submit\" className=\"login-form-button\">\n                        Register\n                    </Button>\n                </Form>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    )\n}\n\nexport const Register = Form.create({name: 'registration'})(RegisterForm);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: '85%',\n  },\n  media: {\n    height: 400,\n  },\n});\n\nexport const CardDetail = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Card style={{display:'block',margin: '0 auto'}} className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.imageUrl}\n          title={props.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.title}\n          </Typography>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.date}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.blogContent}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n          {props.children}\n      </CardActions>\n    </Card>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { LandingNavbar } from '../../components/Navbar/Navbar';\nimport Container from '@material-ui/core/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {fetchOneBlog} from '../../store/actions/authTypes';\nimport {editBlog} from '../../store/actions/authTypes';\nimport { Spin, Icon, Button, Modal, Input, Row, Col, Form } from 'antd';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from 'react-reveal/Zoom';\nimport {CardDetail} from '../../components/Homepage/Card';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Moment from 'react-moment';\n\nconst { TextArea } = Input;\nconst useStyles = makeStyles(theme => ({\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n}));\n\nconst BlogContainer  = ({match, form}) => {\n    const dispatch = useDispatch()\n    const { getFieldDecorator } = form;\n    const classes = useStyles();\n    Moment.globalFormat = 'D MMM YYYY';\n    const antIcon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\n    const isAuthenticated = useSelector(state => state.authData.isAuthenticated);\n\n    useEffect(()=>{\n        const blogId = match.params.id;\n        dispatch(fetchOneBlog(blogId))\n    },[isAuthenticated])\n\n    const data = useSelector(state => state.oneBlogData.data);\n    const dateOrignal = useSelector(state => state.oneBlogData.data.date);\n    const date = (\n        <Moment>{dateOrignal}</Moment>\n    )\n    const loading = useSelector(state => state.oneBlogData.loading);\n\n    const [ modal, setModal ] = useState(false);\n\n    const handleEditBlog = e => {\n        e.preventDefault();\n        form.validateFields(['title', 'imageUrl', 'blogContent'],(err, values) => {\n          if (!err) {\n            dispatch(editBlog(values, match.params.id))\n            setModal(false);\n          }\n        });\n    };\n\n    return(\n        <div>\n            <LandingNavbar />\n            <Container style={{paddingBottom:'60px'}}>\n                <Spin style={{position:'fixed',top:'20%'}} indicator={antIcon} spinning={loading}>\n                    <Zoom>\n                    <CardDetail imageUrl={data.imageUrl} title={data.title} blogContent={data.blogContent} date={date}>\n                        {isAuthenticated ? (\n                            <Fab onClick={()=>setModal(true)} color=\"secondary\" aria-label=\"Edit\" className={classes.fab}>\n                                <Icon style={{fontSize:'20px'}} type=\"edit\" />\n                            </Fab>\n                        ):(\n                            <p style={{display:'inline', color:'red', fontSize:'10px'}}>LOGIN TO EDIT</p>\n                        )}\n                        \n                    </CardDetail>\n                    </Zoom>\n                </Spin>\n                {/* Adding Blog */}\n                <Modal title=\"Add New Blog\" visible={modal} onCancel={()=>{setModal(false)}} footer={null}>\n                    <Form onSubmit={handleEditBlog} className=\"login-form\">\n                    <Row>\n                        <Col span={24}>\n                        <Form.Item label='Title'>\n                            {getFieldDecorator('title', {\n                                initialValue: data.title,\n                                rules: [\n                                    { required: true, message: 'Please enter a Title' },\n                                ],\n                            })(\n                                <Input/>\n                            )}\n                        </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={24}>\n                        <Form.Item label='Image url'>\n                            {getFieldDecorator('imageUrl', {\n                                initialValue: data.imageUrl,\n                                rules: [\n                                    { required: true, message: 'Please enter image url' },\n                                ],\n                            })(\n                                <Input/>\n                            )}\n                        </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={24}>\n                        <Form.Item label='Blog Content'>\n                            {getFieldDecorator('blogContent', {\n                                initialValue: data.blogContent,\n                                rules: [\n                                    { required: true, message: 'Please enter blog' },\n                                ],\n                            })(\n                                <TextArea rows={4} />\n                            )}\n                        </Form.Item>\n                        </Col>\n                    </Row>\n                    <Button type=\"primary\" block htmlType=\"submit\" className=\"login-form-button\">\n                        Submit\n                    </Button>\n                    </Form>\n                </Modal>\n            </Container> \n        </div>\n    );\n}\n\nexport const Blog = Form.create({name: 'editform'})(BlogContainer);\n\n// {this.props.form.resetFields()}","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router';\n// importing pages\nimport LandingPage from './containers/LandingPage/LandingPage';\nimport {Register} from './containers/Register/Register';\nimport {Blog} from './containers/Blog/Blog';\n\nimport jwt_decode from \"jwt-decode\";\nimport {setAuthToken} from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from './store/actions/authTypes';\nimport store from \"./store\";\n\nif (localStorage.jwtToken) {\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  const decoded = jwt_decode(token);\n  store.dispatch(setCurrentUser(decoded));\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = \"./register\";\n  }\n}\n\nfunction App() {\n  return (\n    <Switch>\n        <Route exact={true} path='/' component={LandingPage} />\n        <Route exact={true} path='/register' component={Register} />\n        <Route exact={true} path='/:id' component={Blog} />\n    </Switch>\n  );\n}\n\nexport default withRouter((App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, {history} from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>, \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n//borivali\n"],"sourceRoot":""}